function v = getV2(alg, op, x, i, goal, explore, map, lock,id_f)
if op == 1
%         v = [0; 0; pi/12; sqrt(3)/4; -dr; lr];
        V = [0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0;
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0;
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0;
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;

            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0;
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0;
            
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0;
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0;
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 

            0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0;
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;
            
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0;
            
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0;
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0;

            0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0;
            0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0; 0 0 0 0 -1 0;
            0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0; 0 0 0 1 0 0;
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 
            0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0; 0 0 0 0 1 0;
            0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0; 0 0 0 -1 0 0;]';
        v = V(:, i - 1);
elseif op == 2
    v = [0;0;pi/3;0;0;0];
    if lock ~= 0 || i == 9
        v = [0;0;pi/4;0;0;0];
        return
    end
    
    min = Inf;
%     rr = -pi/6:pi/6:pi/6;
%     rp = -pi/6:pi/6:pi/6;
    ry = -pi/3:pi/12:pi/3;
    dx = 0:0.2:0.8;
%     dy = -2*l:1*l/2:2*l;
%     dz = -0.5:0.5:0.5;
    
    count = 0;
    Xr = [];
    V = [];
%     for roll = 1:length(rr)
%         if rr(roll) + x(1) > pi/6 || rr(roll) + x(1) < -pi/6
%         else
%             for pitch = 1:length(rp)
%                 if rp(pitch) + x(2) > pi/6 || rp(pitch) + x(2) < -pi/6
%                 else

                    for yell = 1:length(ry)
                        for i = 1:length(dx)
    %                         for j = 1:length(dy)
%                                 for k = 1:length(dz)
                                    count = count + 1;
                                    r=R(ry(yell),'y',0)*R(0,'p',0)*R(0,'r',0);
                                    vxyz = r * [dx(i); 0; 0];
                                    v0 = [0; 0; ry(yell); vxyz];
                                    if v0 == 0
                                        break;
                                    end
                                    
                                    V = [V v0];
                                    rx = R(x(3),'y',0)*R(x(2),'p',0)*R(x(1),'r',0);
                                    motion = [0;0; ry(yell); rx * vxyz];
                                    xr_pre = x(1:6) + motion;
                                    Xr = [Xr xr_pre];
%                                 end
    %                         end
                        end
                    end
%                 end
%             end
%         end
%     end
    
%     tic;
    [V_f, Xr_f] = candidate(V, Xr, goal, explore,id_f);
%     toc;
%     t1 = toc
%     length(V_f(1, :))
    
%     tic;
id = 1;
    for i = 1:length(V_f(1, :))
        if alg == 1
            obj = objFun(V_f(:, i));
        elseif alg == 2
            obj = RIobjFun(V_f(:, i), map,id_f);
        end
        if obj < min
            min = obj;
            v = V_f(:, i);
            id = i;
        end
    end
%     figure(1)
%     plot3(Xr_f(4, id), Xr_f(5, id), Xr_f(6, id), 'm*');
end

